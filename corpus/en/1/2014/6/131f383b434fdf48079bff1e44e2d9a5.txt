김일성종합대학학보 (자연과학) JOURNAL OF KIM IL SUNG UNIVERSITY (NATURAL SCIENCE) 주체103(2014)년 제60권 제6호 Vol. 60 No. 6  JUCHE103(2014). A Research on Operational Semantics of UML Statechart Diagrams Sin Chun Ok, Pak Chol Jin The first step in application of model checking to UML design is generation of verifica- tion model by defining its formal semantics and implementing semantics mapping [1 － 3]. Therefore, we have considered operational semantics of UML state diagram in this paper. First, we abstracted UML state diagrams as hierarchical labeled transition system (LTS) and justified its operational semantics as deduction system on Kripke structure. Hierarchical LTS is expressed by LTS’s set and refinement function that characterized those hierarchy and concurrency Definition 1 LTS is 4-tuple LTS A= , where is finite set of states starting from , is transition relation. Label is finite set of transition labels and  for a transition is triple . is the trigger event,  is the guard, is the actions list. We use the following functions source, target, event, guard, action for transition , event(t)=ev, guard(t)=g, action(t)=ac. But there ; source(t)=s, target(t)= are the following functions: function sr(t) constraint to source state, function tg(t) giving to destination state Definition 2(Hierarchical LTS) A hierarchical LTS is a H=(F, R, rf, L),where F is LTS’s set, i.e. and E is a finite set of event ev. The refinement function (i) there exists a unique root LTS (ii) every non-root LTS has exactly one ancestor state: . imposes a tree structure to F. and: : (iii) there are no cycles: A is the root for LTS that is the hierarchical LTS for a refinement function rf.  is called a basic state.  S whose state is For , LTS, states, labels and transitions under A are defined respectively as , . , We consider LTS as partial hierarchical LTS of H characterized by LTS or A. . , , － 39 － Journal of Kim Il Sung University (Natural Science) No. 6 Juche103(2014) We define the notions of conflicting transitions, transition priority and orthogonal states as Definition 3 (state precedence) For , . Let also denote the follows to model state transition. reflexive closure of . if and Definition 4 (conflicting transition) For , t is conflicting with , written , partial order and Definition 5 (priority schema) A Priority Schema is a triple  such that: : Definition 6 (orthogonal state) Two states with . a are orthogonal, written . . It is based on state precedence and generalizes the requirement that transitions originating from “inner” states have priority over those higher in the state hierarchy as required in UML statechart diagrams. So we considered the followings. H of orthogonal states: sets of pair As and is the of all the is the priority function assigning priority to transitions, it comes . Δ semantics of UML state chart By partial LTS’s local state of a hierarchical LTS we define the global state of LTS  Definition 7 (state configuration) State configuration of hierarchical H is the set satisfying the following condition. ① ② Set of all state configuration of A are denoted as ConfA for To abstract event pools, we provide three pools, i.e., completion event pool ( . ), de- ) and when dispatching events, the three ferred event pool ( event pools are inspected in order We use the two functions, ) and normal event pool ( .  and for . where is one of , , and ^ represents the operation merging event e to . In the above concepts we define the operational semantics of UML statechart modeled with the hierarchical LTS by the Kripke structure reflecting the transition relation. － 40 － A Research on Operational Semantics of UML Statechart Diagrams The state of UML statechart is defined by the state configuration of hierarchical LTS and environment  that the hierarchical LTS is acting mutually. Definition 8 The operational semantics of an hierarchical LTS H is Kripke structure , where is the set of statuses of , is the initial status, (i) (ii) (iii) denote a maximal set of non-conflicting transitions of LTS of H with respect to priorities. Promise: The relation archical LTS and denote the transitions of A’s LTSs For state s and set , such that for all , the closure of S, , models labeled transition of the hier- is defined as the set The predicate states that G is a possible join of , (New r) is the structure containing elements of r. system state ( ) is defined as following. Definition 9 (enabled transition set) Set of transitions enabled in the And when considering A as a hierarchical LTS, set of all enabled transitions of A in including A’s descendants is defined as follows . The inference rules of are as follows ① Progress rule ② Composition rule ③ Stuttering rule － 41 － Journal of Kim Il Sung University (Natural Science) No. 6 Juche103(2014) The progress rule establishes that if there is a transition of A enabled and the priority of such a transition is high enough then the transition fires and accordingly reaches a new status. The composition rule stipulates how LTS delegates the execution of transitions to its sub- LTS and these transitions are propagated upwards. If there is no transition of A enabled with priority that is “high enough” and no sub-LTS exist to which the execution of transitions can be delegated, then A has to “stutter”, as en- forced by the stuttering rule. Theorem if and only is a maximal set, under inclusion, which satisfies all the following properties: (1) (2) (3) (4) References [1] M. E. Beato et al.; Electronic Notes in Theoretical Computer Science, 127, 4, 3, 2005. [2] S. Zhang et al.; In 4th International Conference on Secure Software Intergration and Reliability Improvement Companion, IEEE Computer Society, 1～6, 2010. [3] Steffen Helke; Formalizing Statecharts using Hierarchical Automata, May, 24, 2012. － 42 －