김일성종합대학학보 정보과학 주체110(2021)년 제67권  제2호 시험구동형개발에 기초한 쏘프트웨어개발공정의 개선에 대한 연구 문일남, 장명민, 김현아 오늘날 품질높은 쏘프트웨어를 빨리 개발할수 있는 효과적인 개발공정을 확립하는것 은 쏘프트웨어개발단위의 능력을 높이는데서 매우 절실한 문제로 나서고있다. 론문에서는 최근 쏘프트웨어산업에서 주목되고있는 시험구동형개발방식에 기초한 개 발공정을 제안하였다. １．문 제 설 정 시험구동형개발(TDD: Test-Driven Development)은 코드를 구현하기에 앞서 시험경우들 을 지정하는 방식으로 쏘프트웨어를 증분적으로 개발해나가는 개발기법이다.[2] 시험구동형개발의 작업흐름을 그림 1에 보여주었다. 시험걸음 구현걸음 재정돈걸음 그림 1. 시험구동형개발의 작업흐름 시험걸음에서는 검증하려는 대상에 대한 시험경우를 작성하고 구현걸음에서는 시험 경우가 통과되도록 코드를 구현하며 재정돈(refactoring)걸음에서는 이미 시험에서 통과된 기능을 변경시키지 않으면서 코드구성을 세련시킨다. 시험구동형개발은 시험하려는 대상에 따라 단위TDD(UTDD: Unit TDD)와 접수TDD (ATDD: Acceptance TDD)로 나눈다. 발공정을 확립할 필요가 있다. 쏘프트웨어개발단위들은 높은 품질의 쏘프트웨어를 제때에 내놓을수 있는 정연한 개 시험구동형개발과 관련한 선행연구[3]들에서는 시험구동형개발을 적용하여 쏘프트웨 어개발을 성공시킨 실례자료들을 제안하였다. 그리고 학술적환경과 산업적환경에서 시험 구동형개발을 적용할 때 그것이 개발제품의 품질과 개발성원들의 생산성에 어떤 영향을 미치는가에 대한 연구[2]가 많이 진행되였다. 그러나 시험구동형개발방식을 리용하여 개 발공정을 어떻게 확립할것인가에 대한 문제는 현재 연구되지 않았다. ２．단계적시험구동형개발공정 단계적시험구동형개발공정은 프로젝트를 여러개의 단계(반복)들로 나누고 매 단계의 목표를 시험구동형개발기법으로 달성해나가는 반복형개발공정이다. １）개발조구성 개발조에는 다음과 같은 역할들이 필요하다.  ① 프로젝트관리자 － 74 － 종합대학학보 정보과학 주체110(2021)년 제67권 제2호 ② 분석자 ③ 시험자 ④ 구조설계자 ⑤ 프로그람작성자 중요한것은 개발의 전과정에 걸쳐 수요자대표자가 개발에 적극 참여하는것이다. 또 한 한 성원이 여러가지 역할을 담당할수도 있고 1개 역할에 여러명이 배치될수도 있다. ２）개발생명주기 프로젝트를 개시기와 개발기, 결속기로 나눌수 있다.  개발의 생명주기를 그림 2에 보여주었다. 프로젝트개시 단계 TDD 프로젝트 결속 단계계획/ 기능선정 동작하는 체계 제품검사 수요자의 접수시험 프로젝트 총화 요구사항/ 구조설계/ 기능목록 개시기 개시 #1 개발 #1 개발 #2 개발 #3 개발 #4 개발 #5 결속 #1 결속 #2 개발기 결속기 그림 2. 개발의 생명주기 개시기에는 대체로 요구사항들의 대부분을 수집하고 프로젝트의 총적인 범위를 총괄 적으로 정의하며 해결이 가능하다는것을 담보할수 있는 충분한 구조설계를 구상하고 공 수타산, 전체 일감타산을 비롯한 프로젝트계획을 작성한다. 개발기는 본격적인 개발이 진행되는 시기로서 대부분의 노력이 여기에 들어간다. 개 발기는 여러개의 단계로 이루어지며 매 단계에서 TDD를 증분적으로 적용하여 수요자에 게 넘겨줄수 있는 체계를 개발한다. 결속기는 개발된 체계를 본격적으로 현장에 전개하는 시기이다. 여기에는 수요자의 접수시험, 체계의 현장전개가 포함된다. ３）TDD에 기초한 단계실행 프로젝트의 매 단계에서는 시험구동형개발방식으로 체계를 증분적으로 개발해나간다.  공정흐름을 그림 3에 보여주었다. ① 이미 선정된 기능모임에서 구현하려는 기능을 선택한다.  ② 선택된 기능에 대한 접수시험경우를 작성한다.  ③ 접수시험경우에 대한 단위시험경우를 작성한다.(기능코드는 아직 없음.) ④ 단위시험경우를 실행시킨다. 물론 처음에는 실패하며 코드가 콤파일조차 되지 못 할수도 있다. ⑤ 단위시험경우를 통과시키는데 꼭 충분한 코드를 구현한다.  ⑥ 이 단위시험경우와 함께 현재의 접수시험경우에 대해 작성된 기타 모든 단위시험 경우들을 실행시킨다. 한 시험경우라도 실패하면 걸음 ⑤에로 되돌아간다. ⑦ 필요하면 코드를 재정돈한다. 재정돈에는 코드의 중복을 없애고 복잡성을 줄이며 시험구동형개발에 기초한 쏘프트웨어개발공정의 개선에 대한 연구 － 75 － 읽기쉬움성과 유지보수성을 개선하기 위한 코드변경들이 포함된다. ⑧ 재정돈후에는 모든 단위시험경우들을 실행시키고 통과되는가를 확인한다. 한 시 험경우라도 실패하면 걸음 ⑦에로 되돌아가 오유들을 수정한다. ⑨ 단위시험이 더 필요하면 걸음 ③부터 반복한다. 여기서 중요한것은 단위시험경우 를 작게 설정하는것이다. ⑩ 현재의 접수시험경우와 함께 현재 선택된 기능에 대해 작성된 기타 모든 접수시 험경우들을 실행시킨다. 한 시험경우라도 실패하면 실행결과를 결함검토에 보내며 통과 되면 수동적인 시험에로 이행한다. ⑪ 하루 두번정도 자동화된 회귀시험(전체 접수시험경우 및 단위시험경우들에 대한 시험)을 진행한다. 한 시험경우라도 실패하면 실행결과를 결함검토에 보내며 통과되면 수동적인 시험에로 이행한다. ⑫ 결함검토에서는 나타난 결함들을 분석하고 걸음 ⑤에로 되돌아간다.  ⑬ 수동적인 시험에서는 기능에 대해 다시 확인한다. 결함이 없으면 걸음 ①부터 반 복한다. 단계에서 구현할 기능모임의 모든 기능들이 다 구현될 때가지 순환(걸음 ①－⑬)은 짧은 시간을 주기로 반복된다. 즉 매 순환에서는 작은 기능을 선택하여 구현해나간다. 단계에서 구현할 기능모임선정 (수요자대표자 + 분석자) 접수시험경우작성 (분석자 + 시험자 + 수요자대표자) 단위시험경우작성 (프로그람작성자 + 시험자 + 구조설계자) 코드구현 (프로그람작성자) 단위시험경우실행 모든 단위시험경우실행 실패 통과 실패 재정돈 (프로그람작성자 + 구조설계자) 예 통과 단위시험 더 필요? 아니 결함검토 (구조설계자) 실패 모든 접수시험경우실행 (분석자 + 수요자대표자) 시험실패/결함보고 시험실패/결함보고 통과 제품통합 및 자동화된 회귀시험 하루 두번 통과 수동적인 시험진행 (분석자 + 시험자 + 수요자대표자) 통과 다음기능에로 그림 3. 공정흐름 － 76 － 종합대학학보 정보과학 주체110(2021)년 제67권 제2호 ３．효과성평가 제안한 개발공정에 대한 평가를 두가지 측면에서 진행한다. １）CMMI공정들의 만족범위 CMMI[1]2준위와 3준위공정과 실천들에 대해 제안한 공정은 다음과 같은 만족등급을 가질수 있다.(표 1) CMMI공정 공정부류 만족등급 만족근거 표 １．제안한 공정의 만족등급 요구사항관리(REQM) 기술공학 완전만족 프로젝트계획수립(PP) 프로젝트감독 및 통제(PMC) 공급자계약관리(SAM) 프로젝트관리 완전만족 프로젝트관리 크게 만족 프로젝트관리 만족되지 않음. 측정 및 분석(MA) 지원 부분적으로 만족 수요자대표자에 의한 기능요구 사항을 명시 매 단계에서 기능모임의 선정 시험경우들의 통과/실패를 쉽게 식별가능 시험경우들의 통과 및 실패를 직관적으로 표현가능 공정 및 제품품질보증(PPQA) 구성관리(CM) 프로젝트관리 완전만족 프로젝트관리 크게 만족 요구사항개발(RD) 기술공학 완전만족 기술적구현(TS) 기술공학 완전만족 제품통합(PI) 기술공학 완전만족 검증(VER) 확인(VAL) 기술공학 완전만족 기술공학 완전만족 단위공정중점관리(OPF) 단위공정정의(OPD) 단위양성(OT) 공정관리 공정관리 공정관리 등급없음. 등급없음. 등급없음. 위험관리(RSKM) 프로젝트관리 크게 만족 의사결정분석 및 해결(DAR) 통합프로젝트관리(IPM) 지원 프로젝트관리 크게 만족 등급없음. 수요자대표자에 의한 기능모임 을 선정, 접수시험경우의 작성 시험경우에 따르는 코드구현 하루에 두번 제품통합 및 자동 화된 회귀시험 단위시험경우 접수시험경우 및 수요자에 의 한 수동적인 접수시험 수요자대표자에 의한 모든 접 수시험경우의 실행 구조설계자에 의한 결함검토 표 1에서 만족등급은 CMMI의 제3종평가를 진행하여 얻은 결과이다. 표 1에서 보여 준것처럼 제안한 개발방식을 적용하는 CMMI공정들중에서 《기술공학》부류의 공정들은 완전히 만족될수 있다. 또한 《공정관리》부류를 제외한 나머지부류들에 대해서도 만족정 도를 높일수 있다. 즉 제안한 개발공정 하나만으로도 쏘프트웨어개발단위들에 필요한 많 은 공정들을 만족하게 확립할수 있다. 시험구동형개발에 기초한 쏘프트웨어개발공정의 개선에 대한 연구 － 77 － ２）개발제품의 품질개선 결함밀도(결함수/KLOC)를 척도로 하여 이미 결속된 5개의 쏘프트웨어개발프로젝트 를 대상으로 외부품질에 대한 정량적인 분석을 진행한다. 이때 결함수는 최종적으로 수 요자에게 넘겨준 다음 수요자측에서 진행한 접수시험에서 발견된 결함수와 운영기간에 사용자들로부터 제기된 결함수를 합한것을 리용한다. 품질평가를 표 2에 보여주었다. 표 ２．품질평가 결함수 결함밀도 결함밀도평균 방법    지표 제안한 방법 시험구동형개 발을 적용하지 KLOC 프로젝트 웨브프로그람 웨브프로그람 12.53 2.45 음성인식프로그람 28.06 5.22 3.41 웨브프로그람 않는 방법 인공지능프로그람 38 3 59 18 6 3.03 1.22 2.10 3.45 1.76 2.13 2.44 표 2에서 보여준것처럼 제안한 방식이 시험구동형개발을 적용하지 않는 방식에 비해 외부품질의 측면에서 볼 때 12.65%정도 더 개선되였다는것을 알수 있다. 매 단계에서 시험구동형개발을 증분적으로 진행하는 새로운 개발공정모형을 제안하 고 공정모형의 효과성을 CMMI공정들의 만족등급과 품질에서의 개선평가를 통하여 평가 하였다. 맺 는 말 참 고 문 헌 [1] Ammar Mutahar AL-Ashmori et al.; Journal of Software Engineering, 11, 123, 2017.  [2] Rafique Y, Misic VB; Softw Eng IEEE Trans, 39, 6, 835, 2013.  [3] Roberto Latorre; Empir Software Eng, 19, 753, 2014. 주체110(2021)년 2월 5일 원고접수 A Study on Improvement of Software Development Processes Based on Test-Driven Development Mun Il Nam, Jang Myong Min and Kim Hyon A In this paper, we propose a development process based on the Test-Driven Development(TDD) and demonstrate its effectiveness through some application examples. Keywords: test-driven development, software development processes, software quality