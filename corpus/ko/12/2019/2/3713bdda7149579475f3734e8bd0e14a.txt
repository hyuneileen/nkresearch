김일성종합대학학보 정보과학 주체108(2019)년 제65권  제2호 FPGA를 리용한 H.264옹근수변환 및 량자화변환모듈 실현방법 류현성, 남철만 콤퓨터망이나 텔레비죤방영에서는 QCIF(177×144pixel), CIF(352×288pixel), SD(720×480 pixel)와 같은 비데오봉사를 진행하는데 H.264표준[3]을 리용하고있다. 그러나 H.264표준[1, 2]을 장치적으로 실현하는것은 매우 어려운 문제이다. 론문에서는 FPGA를 리용하여 H.264부호화구조에서 옹근수변환과 량자화, 역옹근수 변환과 역량자화구조로 이루어진 변환부호화모듈을 장치적으로 실현하는 방법을 제기 하였다. １．변환알고리듬과 장치구성방식 １）변환알고리듬 (１) 옹근수변환알고리듬 H.264에서 밝기예측오차신호 Y는 4×4옹근수코시누스변환(ICT)에 의해 주파수령역 z로 전환된다. 이때 4×4입력행렬 X에 대해 변환기의 출력행렬을 다음과 같이 쓸수 있다. Y = ( CXC ⋅ ⋅ f ) ⊗ E f = T f 1 2 1 1 ⎡ ⎢ ⎢ ⎢ ⎢ ⎣ 1 1 − − 1 2 1 1 − 1 − 2 1 2 − − − 2 1 ⎤ ⎥ ⎥ ⎥ ⎥ ⎦ ⋅ X ⋅ 1 ⎡ ⎢ 1 ⎢ ⎢ 1 ⎢ 1 ⎣ 2 1 − 1 − 2 1 1 − 1 − 1 1 2 − 2 − 1 ⎤ ⎥ ⎥ ⎥ ⎥ ⎦ ⊗ 2 a 2/ 2 ab a ab 2/ ⎡ ⎢ ⎢ ⎢ ⎢ ⎢ ⎣ ab 2 b ab 2 b 2/ 4/ 2/ 4/ 2 a 2/ 2 ab a ab 2/ ab 2 b ab 2 b 2/ 4/ 2/ 4/ ⎤ ⎥ ⎥ ⎥ ⎥ ⎥ ⎦ (1) 여기서 b = 2/1 cos( π )8/ 이다. , a = 1 2 변환행렬 fE 를 량자화처리하면 옹근수변환부분이 얻어진다. f XCC f 는 4개의 곁수들 인 1, －1, 2, －2를 리용하는 2차원옹근수변환의 핵심부분으로서 더하기와 밀기연산만을 포함한다. H.264에서는 또한 16×16내부예측방식에서 밝기 Y의 4×4 DC성분들과 색도 Cr, Cb의 DC성분들에 대해 아다마르변환(HT)을 리용하여 다시 변환을 진행한다.  1 1 1 1 1 1 Y Luma DC = ⋅ X Luma DC ⋅ 1 −⋅ 2 (2) ⎛ ⎜ ⎜ ⎜ ⎜ ⎜ ⎝ 1 ⎡ ⎢ 1 ⎢ ⎢ 1 ⎢ 1 ⎣ 1 − − 1 1 − 1 1 − 1 ⎤ ⎥ 1 − ⎥ ⎥ 1 ⎥ 1 − ⎦ 1 ⎡ ⎢ 1 ⎢ ⎢ 1 ⎢ 1 ⎣ 1 1 − 1 − 1 1 − 1 ⎤ ⎥ 1 − ⎥ ⎥ 1 ⎥ 1 − ⎦ ⎞ ⎟ ⎟ ⎟ ⎟ ⎟ ⎠ Y Luma DC = X chra DC (3) ⎛ ⎜ ⎜ ⎝ 1 ⎡ ⎢ 1 ⎣ 1 ⎤ ⋅⎥ 1 ⎦ − ⋅ 1 ⎡ ⎢ 1 ⎣ 1 ⎤ ⎥ 1 ⎦ − ⎞ ⎟ ⎟ ⎠ FPGA를 리용한 H.264옹근수변환 및 량자화변환모듈실현방법 － 13 － (２) 량자화알고리듬 H.264에서 밝기신호에 대한 량자화공식은 다음과 같다. PF Qstep ijY 는 옹근수변환후의 출력신호이며 Qstep는 량자화파라메터 QP에 따라 결정되는 round (4) Y ij Z = ij ⎛ ⎜⎜ ⎝ ⎞ ⎟⎟ ⎠ 여기서 량자화걸음으로서 52개의 값을 가진다. 옹근수변환에서 후처리행렬 fE 를 량자화단계에 통합시키면 식 (4)를 다음과 같이 쓸 수 있다. Z ij = round W ij × round W ij × ⎛ ⎜⎜ ⎝ POF Qstep ⎞ =⎟⎟ ⎠ ⎛ ⎜ ⎝ LevelScale q 2 ⎞ ⎟ ⎠ q = 15 + floor (6) QP 6 ⎛ ⎜ ⎝ ⎞ ⎟ ⎠ (5) 량자화에서 곱하기인수 LevelScale의 값은 표 1과 같다. 표 １．량자화에서 곱하기인수 LevelScale의 값 위치 1 위치 2 (0, 0)(2, 0)(0, 2)(2, 2) (1, 1)(1, 3)(3, 1)(3, 3) QP 0 1 2 3 4 5 13 107  11 916  10 082  9 362  8 192  7 282 5 243 4 660 4 194 3 647 3 355 2 893 기타 위치 8 066 7 490 6 554 5 825 5 243 4 559 이 값을 고려하여 식 (5)를 간단히 하면 WZ = ij ij × LevelScale ,(,6％( QP i j )) + f >> q (bit) (7) sign ( Z ) = sign ij W ( ij ) 이다. DC성분들에 대해 량자화과정은 다음과 같다. Z DC ij = W DC ij × LevelScale ))0,0(,6％( QP + 2 f >> ( q + )1 (8) sign ( Z ) = sign W ( ) DC ij DC ij ① 역량자화알고리듬 역량자화식을 쓰면 다음과 같다. =′ Y ij Z ij 여기서 Qstep × PRF 64× 를 InvLavelScale로 넘기면 식 (9)를 다음과 같이 쓸수 있다.  =′ Y j ij ,(,6％( QP i InvLevelSc ale Qp << 6/ )) Z × ij (10) × Qstep × PRF 64× (9) 표 2에 역량자화에서 곱하기인수 InvLevelScale의 값을 주었다. 4×4 DC블로크에 대해 량자화식은 다음과 같다. － 14 － 종합대학학보 정보과학 주체108(2019)년 제65권 제2호 Y ′ DC ij = ( DC Z ij × InvLevelSc ale )))0,0(,6％( QP << Qp ≥ 12 (11) QP 6 ⎛ ⎜ ⎝ − ⎞ ,2 ⎟ ⎠ 표 ２．역량자화에서 곱하기인수 InvLevelScale의 값 위치 1 위치 2 (0, 0)(2, 0)(2, 2)(0, 2) (1, 1)(1, 3)(3, 1)(3, 3) 기타 위치 QP 0 1 2 3 4 5 10 11 13 14 16 18 16 18 20 23 25 29 13 14 16 18 20 23 Y ′ DC ij = ( Z DC ij × InvLevelSc ale )))0,0(,6％( QP + QP )6/ (1 − 2 >> 2 − QP ≤ 12 (12) ⎛ ⎜ ⎝ QP 6 ⎞ , ⎟ ⎠ 2×2 DC블로크에 대해 량자화식은 다음과 같다. Y ′ DC ij = ( DC Z ij × InvLevelSc ale Y ′ DC ij = Z ( DC ij × InvLevelSc )))0,0(,6％( QP ⎛ ⎜ ⎝ )))0,0(,6％( QP >> ale << QP 6 1, − ⎞ ,1 ⎟ ⎠ QP QP ≥ 6 (13) ≤ 6 (14) ② 역옹근수변환알고리듬 밝기신호에 대한 역옹근수변환의 출력식은 다음과 같다. X =′ T ( ( YC i ⊗ ) CE i i ) = 1 ⎡ ⎢ 1 ⎢ ⎢ 1 ⎢ 1 ⎣ 1 − 2/1 2/1 1 − 1 1 − 1 − 1 2/1 1 − 1 2/1 − ⎤ ⎥ ⎥ ⎥ ⎥ ⎦ ⎛ ⎜ ⎜ Y ⊗× ⎜ ⎜ ⎜ ⎝ 2 a ab 2 a ab ⎡ ⎢ ⎢ ⎢ ⎢ ⎢ ⎣ ab 2 b ab 2 b 2 a ab 2 a ab ab 2 b ab 2 b ⎤ ⎥ ⎥ ⎥ ⎥ ⎥ ⎦ ⎞ ⎟ ⎟ ⎟ ⎟ ⎟ ⎠ × (15) × 1 1 ⎡ ⎢ ⎢ ⎢ 1 ⎢ 2/1 ⎣ 1 2/1 − − 1 1 1 2/1 − 1 1 − 1 − 1 1 2/1 − ⎤ ⎥ ⎥ ⎥ ⎥ ⎦ 그리고 식 (15)의 DC성분들에 대한 역변환식은 꼭 반대이다. X ′ Luma CD ′ = ′× Y Luma DC × (16) 1 ⎡ ⎢ 1 ⎢ ⎢ 1 ⎢ 1 ⎣ 1 1 1 1 − − 1 1 − 1 − 1 1 ⎤ ⎥ 1 − ⎥ ⎥ 1 ⎥ 1 ⎦ − 1 ⎡ ⎢ 1 ⎢ ⎢ 1 ⎢ 1 ⎣ 1 1 1 1 − − 1 1 − 1 − 1 1 ⎤ ⎥ 1 − ⎥ ⎥ 1 ⎥ 1 ⎦ − X ′ chroma = ⎛ ⎜ ⎜ ⎝ 1 ⎡ ⎢ 1 ⎣ 1 ⎤ ⎥ 1 ⎦ − ⎞ ⎟ ′×⎟ Y ⎠ chroma DC × 1 ⎡ ⎢ 1 ⎣ 1 ⎤ ⎥ 1 ⎦ − (17) ２）장치구성방식 (１) 옹근수변환 및 역옹근수변환을 위한 장치구성 그림 1에 옹근수변환기의 장치구성방식을 보여주었다. FPGA를 리용한 H.264옹근수변환 및 량자화변환모듈실현방법 － 15 － 그림 1. 옹근수변환기의 장치구성방식 입력자료는 화상예측값(0～255)과 원화상값(0～255)의 차로 주어지는 4×4블로크의 잔 류오차들로서 한주기동안에 2개의 1차원 행, 렬변환기들에서 동시에 처리되여 16개의 변 환곁수들이 출력된다. (２) 량자화 및 역량자화를 위한 장치구성 그림 2에 4×4 AC곁수들과 DC곁수들에 대한 량자화장치구성방식을 보여주었다. 그림 2．4×4 AC곁수들과 DC곁수들에 대한 량자화장치구성방식 H.264옹근수변환기에서 출력된 신호는 다음 량자화모듈에 입력되여 처리된다. 량자화모듈은 16개의 처리단위(PE)들과 16개의 자료를 입력하는 입력모선, 입력값을 저장하기 위한 등록기렬, 2개의 읽기전용기억기(ROM)들로 구성된다. 량자화모듈에서는 16 개의 입력자료를 받아 QP인수에 따라 4개 박자주기동안에 량자화를 처리한다. － 16 － 종합대학학보 정보과학 주체108(2019)년 제65권 제2호 처리단위(PE)는 ROM-MF, 곱하기, 더하기, 밀기등록기, 조종단으로 구성되였다. 옹근수곱 하기장치는 AC와 DC변환곁수들과 LevelScale인수의 곱하기를 실현하며 그 자료는 ROM_MF 기억기에 보관되였다가 QP/6의 나머지에 따라 선택된다. 가산기는 곱한 결과와 ROM_F기억 기에서 주어진 f파라메터를 더한다. 밀기등록기는 가산기의 결과를 qbit만큼 밀기한다. 곱하기, 더하기, 밀기장치들과 ROM_MF기억기모듈들은 각각 1개의 박자주기를 차지한다. 역량자화모듈은 량자화모듈과 류사하다. 차이를 보면 PE모듈에서 가산기가 없을뿐이 다. 그러나 DC성분에 대한 역량자화는 꼭같고 밀기등록기가 QP<12일 때 진행된다는것이 다. 역량자화모듈은 3～4주기마다 16개의 곁수들을 출력시킨다. QuatosII 16 standards환경에서 Cyclone 5계렬 FPGA(5csxfc6d6f31c6)로써 장치적구성을 실현하였다. 제안방법을 실현하는데 필요한 FPGA장치자원을 표 3에 보여주었다. ２．실 험 결 과 표 ３．FPGA장치자원 항 목 Family  Device Timing Model Logic Utilization(in ALMs) Register  Total DSP Blocks 지 표 Cyclone V 5csxfc6d6f31c6 Final  3 777/41 910(9%) 146 34/112(30%) 변환모듈장치는 6박자주기동안에 1개의 마크로블로크에 대한 변환을 실현하며 이것 은 장치소편의 박자주파수가 156MHz일 때 HD(1 920×1 080)비데오를 실시간적으로 부호화 하는데 적합하다는것을 보여준다. 또한 장치자원소비도 아주 적기때문에 운동예측을 비롯 하여 H.264부호화를 실현하는데 영향을 미치지 않는다. 제안된 방법은 QuatosII 16 standards환경에서 Cyclone 5계렬 FPGA소편구조로써 실현되였 으며 실험결과는 HD(1 920×1 080pixel)비데오를 압축하는데 효과적이라는것을 보여주었다. 맺 는 말 참 고 문 헌 [1] A. B. Atitallah et al.; International J. of Computer Science, Engineering and Applications, 1, 5, 119, 2011. [2] S. Hamdy et al.; Turkish Journal of Electrical Engineering & Computer Sciences, 24, 1967, 2016. [3] S. L. Youn-Long et al.; VLSI Design for Video Coding, Springer, 52～71, 2010. 주체108(2019)년 2월 5일 원고접수 FPGA를 리용한 H.264옹근수변환 및 량자화변환모듈실현방법 － 17 － A Method for Implementation of Integer and Quantization Transform Modules in H.264 by Using FPGA Ryu Hyon Song, Nam Chol Man In this paper we proposed a method for implementation of integer and quantization transform modules which became as core in H.264 encoder by using FPGA Key words: integer transform, quantization transform