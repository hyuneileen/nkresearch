김일성종합대학학보 정보과학 주체109(2020)년 제66권  제3호 0－1옹근수계획법문제를 병렬계산하기 위한 한가지 간접탐색법 전철용, 김유성 선행연구[1, 2]에서는 0－1옹근수계획법문제에 존재하는 1+n 개 모 임으로 분류해놓고 매 모임에서 최량풀이를 구하기 위한 한가지 간접탐색법과 자기저항 형DNA계산모형에 기초한 0－1옹근수계획법문제의 풀이법을 제기하였다. 이외에도 0－1 옹근수계획법문제의 풀이법들이 많이 제출되였지만 모두 직렬계산법들로서 규모가 큰 문 제들에 대하여서는 최량풀이를 계산해내지 못하고있다. n2 개의 벡토르를 0－1옹근수선형계획법문제는 다음과 같이 정식화된다. min{ T xc | Ax ≤ , xb = ( ξ 1 , ξ 2 , ⋅⋅⋅ , ξ n ), ξ i ∈ },1,0{ i = ,2,1 (cid:34) }, n 여기서 A = ( ija nm ×∈ Z) , Z는 어떤 옹근수모임, b는 m차원, c는 n차원옹근수벡토르이다. 벡토르 에 대하여 일반성을 잃지 않으면서 0－1옹근수계획법문제에는 르분류방법으로 다음과 같이 나눌수 있다. n2 개중의 임의의 벡토르는 다음의 c = ( c 1 , T ) , c 2 c , (cid:34) nc ≤⋅⋅⋅≤ 0 이라고 하자. n2 개의 벡토르가 존재하는데 선행연구[1]에서의 0－1벡토 nc c 1 ≤ ≤ 2 1+n 개 모임중의 하나에 속한다. k X n ⎧ ⎪ = ∑ x ξ ⎨ j ⎪⎩ 1 = j ⎫ ⎪ , ⎬ ⎪⎭ = k k = ,1,0 (cid:34) , n 선행연구[1]에서는 이 1+n 개 모임에 대하여 k가 커지는 순서에 따라 직렬계산을 진 행하여 최량풀이를 구하였지만 우리는 매개 모임에 대한 계산을 서로 다른 마디콤퓨터가 진행하게 함으로써 계산시간을 단축하였다. 제한조건을 다음과 같이[1] 동등하게 변형할수 있다. n ′∑ a ij j 1 = ξ j ′≤ b j , i = ,2,1 (cid:34) , m (1) 여기서 이다. 있다. =′ a ij a ij − L a i , =′ b j b i − L ka i , L a i = {min a ij 1 nj ≤≤ }, i = ,2,1 (cid:34) , ; jm = ,2,1 (cid:34) , n 식 (1)로부터 kX 의 제한조건을 구할수 있으며 이로부터 kX 의 최량풀이를 구할수 정리 １ 변수 , ξξ s s 1 2 ξ ts , (cid:34) 가 지정변수이고 변수 , , ξξ s 1 + s t t + 2 , (cid:34) , ξ s n 이 자유변수라고 하면 앞으로 생기는 kX 의 모든 벡토르들에 대한 목적함수 f 의 값은 0－1옹근수계획법문제를 병렬계산하기 위한 한가지 간접탐색법 － 43 － t ∑ j 1 = r ∑ j 1 = f ≥ c ξ js s j + c v j (2) , ξξ s s 1 2 (cid:34) m , , ξξ s s 1 2 (cid:34) m , 를 만족시킨다. 여기서 r는 앞으로 1로 지정되여야 할 변수의 개수, jvc 는 자유변수들의 첨수를 의미한다. 정리 ２ 변수 할 때 어떤 i ∈ ,2,1{ + }1 에 대하여 , (cid:34) 가 지정변수이고 변수 , ξ ts , ξξ s 1 + s t t + 2 , (cid:34) , ξ s n 이 자유변수라고 u ir 1 + ∑ uj = i 2 s t ∑ sj = 1 −′>′ a b ij i ′ a ξ                           (3) ij j 이면 반드시 = 1 이여야 한다. iuξ 1 정리 ３ 변수 , (cid:34) 가 지정변수이고 변수 , ξ ts , ξξ s 1 + s t t + 2 , (cid:34) , ξ s n 이 자유변수라고 할 때 어떤 i ∈ ,2,1{ + }1 에 대하여 ′ a iu , tni − −′> b i ′ a ξ j ij − (4) s t ∑ sj = 1 u , ri 1 − ∑ uj = i 1 ′ a ij 이면 , 0 = 이여야 한다. −tniuξ 이상의 리론에 기초한 0－1옹근수선형계획법문제에서 kX 에서의 최량풀이탐색과정 은 다음과 같다. 걸음 １ ∗ x = ,0,0( (cid:34) )0, ∈ n , fR ∗ = c j + ,1 t = ,0 O t num = ,0 r −= Ok nfree ,0)( i = i = ,2,1 t num , free )( i = ,2,1 (cid:34) , n (자유변수들의 첨수모임)이라고 하고 k ∑ j 1 = , ii = 걸음 ２ 자유변수들에 대하여 제한식 (1)의 곁수들을 커지는 순서로 배렬하고 가령 n,(cid:34) (지정변수들의 첨수모임), 다음걸음으로 이행한다. 적어도 1개의 i ∈ ,2,1{ (cid:34) , m + }1 이 존재하여 s t ∑ sj = 1 ′ a ξ j ij + ′>′ a b ij i u ir ∑ uj = i 1 t ∑ j 1 = c ξ s j s j r + ∑ j 1 = c u m + ,2 j ∗ > f u ir 1 + ∑ uj = i 2 −′>′ a b ij i ′ ′ ξ  a ij j s t ∑ sj = 1 이 성립한다고 하면 걸음 8로 이행한다. 그렇지 않으면 다음걸음으로 이행한다. 에 대하여 걸음 ３ 어떤 ,2,1{ (cid:34) }1 m ∈ + i , 가 성립하면 t t += ,1 ts )( = u , p ξ ts 1 )( = ,1 O t num = O t 1 − num + ,1 rule t ,1)( = nfree t )( = ts ( ), free ts (( )) = 0 이라고 하고 걸음 5로 이행한다. 그렇지 않으면 다음걸음으로 이행한다. 걸음 ４ 어떤 i ∈ ,2,1{ (cid:34) , m + }1 에 대하여 또는 － 44 － 종합대학학보 정보과학 주체109(2020)년 제66권 제3호 ′ a iu tni , − −′> b i ′ a ξ j ij − ′ a ij s t ∑ sj = 1 u , ri 1 − ∑ uj = i 1 가 성립하면 t t += ,1 O t num = O t 1 − num , ts )( = u tnq , − , ξ ts )( = ,0 rule t ,1)( = nfree t )( = ts ( ), free ts (( )) = 0 이라고 놓고 다음걸음으로 이행하고 그렇지 않으면 t t += ,1 O t num = O t 1 − num + 이라고 놓고 다음걸음으로 이행한다. m + ,1 ts )( = u , ξ ts )( 1,2 = ,1 rule t )( = ,0 nfree t )( = ts ( ), free ts (( )) = 0 Ot j k ∈ 걸음 ５ num = 이면 모든 0=jξ kX 의 어떤 벡토르 x를 얻는다. 만일 이 벡토르가 허용벡토르이고 목적함수값이 (1)( l l = t += rule ()( i free free )( i ,0 ,1 ≠ , t 이라고 놓고 (cid:34) , n )에 대하여 ,2,1 i = (cid:34)+ ,2 , k ) f < 이라면 *f x =* x , f =* f 라고 놓고 걸음 8로 이행하고 그렇지 않으면 다음걸음으로 이행한다. 걸음 ６ Ok − t num tn −= j ∈ free ()( i free i = ,2,1 (cid:34) , n ) 에 대하여 이면 모든 ,1 rule =ξ j (1)( l l = t += ,1 t )( ,0 i ≠ (cid:34)+ ,2 , k ) kX 의 어떤 벡토르 x를 얻으며 만일 이 벡토르가 허용벡토르이고 목적함수 이라고 놓고 값이 *f f < 을 만족시킨다면 라고 놓고 걸음 9로 이행한다. 그렇지 않으면 다음걸음으로 이행한다. x =* x , f =* f 이면 다음걸음으로 이행하고 그렇지 않으면 걸음 3 t ∑ c ξ s j s j r + ∑ j 1 = c u m + ,2 j ∗ > f 걸음 ７ 1 = 으로 이행한다. j 걸음 ８ 만일 걸음 ９ 만일 0=t 이면 걸음 11로 이행하고 그렇지 않으면 다음걸음으로 이행한다. rule 이라면 0)( =t tsξ )( = ,0 O t num = O t num − ,1 rule t 1)( = 이라면  ,0)( nfree t = free ))(( ts = ),( ts t t −= 1 이라고 놓고 걸음 3으로 이행한다. 걸음 １０ 만일 rule 1)( =t 이라고 놓고 걸음 9로 이행한다. n ∑ 1 = 량값, 최량벡토르이다. j 걸음 １１ ∗ f = jc + 1 이면 kX 에 최량벡토르가 없으며 그렇지 않으면 ∗ ∗ x , 이 최 f 이와 같은 방법으로 매 마디콤퓨터들에서 kX 에서의 최량풀이를 따로따로 구한다면 계산시간은 원래의 직렬계산법을 리용할 때보다 훨씬 줄어들게 된다. 0－1옹근수계획법문제를 병렬계산하기 위한 한가지 간접탐색법 － 45 － 맺 는 말 참 고 문 헌 대규모0－1옹근수계획법문제를 병렬계산방법으로 풀기 위한 한가지 간접탐색알고리 듬을 제안하였다. [1] 김유성 등; 조선민주주의인민공화국 과학원통보, 6, 17, 주체104(2015). [2] 殷志祥 等; 安徽理工大学学报(自然科学版), 38，3，7, 2018. 주체109(2020)년 5월 5일 원고접수 Implicit Enumerative Search for Parallel 0-1 Integer Programming Algorithm Jon Chol Yong, Kim Yu Song In this paper we studied an implicit enumerative search that got the optimal solution in each set, n2  elements, for processing 0-1 integer programming sets about 1+n based on being sorted to the algorithm with parallel. Keywords: 0-1 integer programming, parallel algorithm