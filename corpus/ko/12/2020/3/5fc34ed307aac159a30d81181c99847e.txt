김일성종합대학학보 정보과학 주체109(2020)년 제66권  제3호 원격교육봉사체계 요청응답특성개선의 한가지 방법 김철혁, 어남일 선행연구[1]에서는 아파치HTTP봉사기에서 표준적으로 제공하는 mod_proxy모듈의 리 용방법을 제안하였다. 선행연구[2]에서는 Tomcat과 아파치HTTP봉사기의 호상련결방법을 제안하였다.  론문에서는 원격교육운영체계의 요청응답특성을 분석하고 부하분산방법을 리용하여 요청부하를 분산시켜 봉사기요청처리능력을 개선하는 방법을 제안하였다. １．원격교육봉사체계의 요청부하특성분석 원격교육봉사체계의 구성과 요청응답특성, 망통신량세기는 다음과 같다.  ① 원격교육봉사체계의 구성 봉사프로그람의 측면에서 볼 때 학습관리모듈(LMS), 업무자료기지(MySQLDB), 학습 활동리력자료기지(MongoDB)로 구성되였다. 학습관리모듈은 Tomcat응용봉사프로그람, 업무자료기지는 MySQL관계형자료기지관리 프로그람, 학습활동리력관리기지는 Mongo비관계형자료기지관리프로그람을 기반으로 하 고있다. 학습자들과 업무관계자말단으로부터 들어오는 모든 요청은 학습관리모듈에서 처리하 며 이 과정에 학습관리모듈은 학습활동리력자료기지와 업무자료기지를 호출한다. ② 원격교육봉사체계의 요청응답특성 현재의 웨브페지는 페지를 완전히 현시하는데 100개이상의 요청을 요구한다.  원격교육봉사기는 수천개의 학습자말단들로부터 들어오는 강의, 자체평가, 시험과 관 련한 요청들과 업무관계자, 관리자말단에서 들어오는 요청들을 실시간적으로 중단없이 처리하여야 한다. 원격교육봉사체계의 요청응답시간을 평가하기 위하여 Google Chrome웨브열람기에서 가입 및 학습페지요청응답시간, 가입 및 시험페지요청응답시간을 측정하였다. 가입 및 학습페지요청응답시간을 표 1에 보여주었다. 표 １．가입 및 학습페지요청응답시간 No. 2 1 요청형태 첫 페지호출 가입 학습페지호출 3 4 록화형강의열기 5 평가내용물열기 0∑   평균요청응답시간 합계 요청/수 응답시간/ms 52 72 42 24 22 212 1 200 1 860 897 140～930 80～658 4 120～5 500 23.5 － 60 － 종합대학학보 정보과학 주체109(2020)년 제66권 제3호 가입 및 시험페지요청응답시간을 표 2에 보여주었다. 표 ２．가입 및 시험페지요청응답시간 요청/수 응답시간/ms No. 요청형태 첫 페지호출 가입 시험페지호출 시험과목선택 1 2 3 4 0∑   평균요청응답시간 합계 1 200 1 800 3 000～9 600 7 000～13 300 700 12.8 52 72 31 24 179 ③ 망통신량세기평가  리틀(little)의 규칙에 의하면 안정상태에서 특정망령역에 남아있는 평균통보문의 수 N은 통보문의 평균도착률 λ에 통보문들의 망령역평균경과시간 T를 곱한것과 같다. 즉 N = λ 이다.  T × M/M/1모형에 따라 시간간격 T내에 k개의 통보문도착확률을 P라고 할 때 k λ T − e (cid:34),2,1,0 kk ,!/ ( T λ P = = ) 과 같이 표시된다. 6h사이에 평균가입회수에 따르는 요구도착확률을 표 3에 보여주었다. 표 ３．6h사이에 평균가입회수에 따르는 요구도착확률 가입/수 시간/h λ T/s N 1 200 2 400 6 6 0.056 0.11 5 5 0.28 0.55 k 1 1 P 0.212 0.313 평균봉사률을 μ라고 하면 평균봉사시간은 μ/1 이다. 통신량세기는 다음과 같이 표시된다.  /0 0λ 은 요청도착률(통보문은 여러개의 부분요청으로 이루어짐.)이다. ρμλρ 0, = ≤ ≤ 1 여기서 6h사이에 평균가입회수에 따르는 통신량세기를 표 4에 보여주었다. 표 ４．6h사이에 평균가입회수에 따르는 통신량세기 가입/수 ∑×λλ ( 0 0 )5/ 1 200 2 400 2.36 4.72 μ 42.4 42.4 ρ 0.056 0.11 표 4에서 개수이고 안정상태에서 균지연이 평균봉사시간의 0∑ 은 학습페지평균요청응답시간(5s)동안 1개 사용자말단에서 발생한 요청 이다. 그리고 이다. 이것은 통보문의 평 − μ ρ− 배라는것을 보여준다. ρ 가 1에 가까와갈수록 T는 무 μλ ≤0 1/(1 1/(1 =T ) ρ /1 × ) 한대로 커진다. T−ρ 관계를 보면 7.0>ρ 에서 T가 급격히 증가된다. 즉 봉사률이 클수록, 성능이 높 을수록 통신량세기에 따르는 지연이 줄어든다는것을 알수 있다. λρ− 관계곡선을 그림 1에 보여주었다. 원격교육봉사체계 요청응답특성개선의 한가지 방법 － 61 － 1λ 2λ 0 0.2 0.4 0.6 0.8 1 ρ 그림 1. λρ− 관계곡선 그림 1에서 9.0=ρ 1, λλ 는 각각 μ 일 때 도착률과 가입회수와의 관계를 표 5에 보여주었다. 일 때의 도착률곡선이다. ,4.42 60 μ = = 2 표 ５．ρ = 0.9일 때 도착률과 가입회수와의 관계(6h동안) 가입/수 19 440 27 432 ∑×λλ ( 0 0 )5/ λ 1s/ －μ 38.16 54 0.9 1.27 42.4 60 ρ 0.9 0.9 5.0=ρ 일 때 가입회수와 μ관계를 그림 2에 보여주었다. μ )/1( sλ 60 50 40 30 20 10 μ 120 100 80 60 40 20 0 10 000 20 000 30 000 NL 그림 2. 5.0=ρ 일 때 가입회수와 μ관계 2.43=μ T−μ 관계에서 이다. 이것은 1개 학습자말단으로부터 학습실 방문요구에 대한 응답시간이다. 이때 가능한 가입회수는 11 000회/6h이다. 성능을 1.5배 높일 때 즉 에서 가입회수가 17 000회/6h정도로 늘어나도 체계는 안정 T 상태를 유지할수 있다. s9.4=T 일 때 s17.3 ,7.66 μ = = － 62 － 종합대학학보 정보과학 주체109(2020)년 제66권 제3호 ２．요청응답특성개선방법 봉사기의 요청응답특성은 응용프로그람준위와 봉사프로그람준위에서 개선할수 있다. 여기서는 아파치봉사기를 부하조종기로 하고 들어오는 요청을 여러개의 Tomcat실체에 분산시켜 처리하는 방법에 대하여 론의한다. 요청흐름은 다음과 같다.  ① 열람기에서 URL을 지적하면 요청은 HTTP봉사기에서 접수한다.  ② HTTP봉사기는 요청을 접수하고 업무론리를 처리하기 위하여 Tomcat에 요청처리 를 넘긴다. 통하여 응답을 귀환시킨다. 속도로 처리될수 있다. ③ Tomcat은 자료기지봉사기와 련계하여 필요한 처리를 진행하고 요청접수통로를 아파치HTTP봉사기를 리용하여 부하조종을 실현하는 우점은 다음과 같다.  image, JS, CSS, HTML화일과 같은 정적내용에 대하여 Tomcat에 비하여 10%이상 높은 아파치HTTP봉사기는 여러개의 Tomcat실체와의 련결을 적은 비용과 높은 안정성을 가지고 실현하도록 하며 봉사체계의 전반적인 확장성과 유연성을 높여준다. 요청부하는 여러 Tomcat실체들로 분산되며 부하처리능력은 실체개수에 비례하여 개 선된다. 부하분산기구성도를 그림 3에 보여주었다. 아파치 mod_proxy 또는 mod_jk AJP AJP AJP Tomcat 1 Tomcat 2 Tomcat 3 그림 3. 부하분산기구성도 아파치봉사기와 Tomcat실체들과의 련계는 TCP파케트에 기초한 HTTP 혹은 AJP(Apache Jserv Protocol )를 리용한다. AJP는 일반본문형식대신 2진형식으로 망자료전송을 보장하기 위해 개발되였다.  mod_jk와 mod_proxy는 아파치봉사기와 Tomcat을 결합시키는 AJP련결기이다.  3개의 Tomcat실체를 리용하는 mod_jk련결기설정은 다음과 같다.  아파치웨브봉사기설정으로 workers.properties와 mod_jk.conf를 창조한다.  ·mod_jk.conf내용 LoadModule jk_module modules/mod_jk.so JkWorkersFile conf.d/workers.properties JkLogFile logs/mod_jk.log 원격교육봉사체계 요청응답특성개선의 한가지 방법 － 63 － JkLogLevel info JkMount /RNS/* bal1 JkMount /jkstatus/ stat1 ·workers.properties 내용 worker.list = bal1, stat1 worker.NodeA.port = 8009 worker.NodeA.host = rnsServer worker.NodeA.type = ajp13 worker.NodeA.lbfactor = 10 worker.NodeB.port = 8019 worker.NodeB.host = rnsServer worker.NodeB.type = ajp13 worker.NodeB.lbfactor = 10 worker.NodeC.port = 8029 worker.NodeC.host = rnsServer worker.NodeC.type = ajp13 worker.NodeC.lbfactor = 10 worker.bal1.type = lb worker.bal1.sticky_session = 1 worker.bal1.balance_workers = NodeA, NodeB, NodeC worker.stat1.type = status Tomcat실체들에 대한 설정 Tomcat실체설치경로에서 conf/server.xml을 편집 <Server port = “8005” shutdown = “SHUTDOWN”>부분에서 port값을 실체별로 8005, 8015, 8025로 설정한다. <Connector port = “8009” enableLookups = “false”redirectPort = “8443” protocol = “AJP/1.3”/> 부분에서 port값을 실체별로 8009, 8019, 8029로 설정한다.  3개 Tomcat실체의 port설정을 표 6에 보여주었다. 표 ６．3개 Tomcat실체의 port설정 실체이름 수정할 화일이름 TCP port(Shutdown, Ajp Connector) NodeA NodeB NodeC ../NodeA/conf/server.xml ../NodeB/conf/server.xml ../NodeC/conf/server.xml 8005, 8009 8015, 8019 8026, 8029 Engine부분에서 jvmRoute값을 수정한다. <Engine name = “Catalina” defaultHost = “ocalhost” jvmRoute = “NodeA”> 3개 Tomcat실체의 jvmRoute값설정을 표 7에 보여주었다. 표 ７．3개 Tomcat실체의 jvmRoute값설정 실체이름 수정할 화일이름 jvmRoute 값 NodeA NodeB NodeC ../NodeA/conf/server.xml ../NodeB/conf/server.xml ../NodeC/conf/server.xml NodeA NodeB NodeC － 64 － 종합대학학보 정보과학 주체109(2020)년 제66권 제3호 ３．실험결과분석 실험환경을 표 8에 보여주었다. No. 환 경 기술적지표 표 ８．실험환경 1 실험봉사기장치환경 HP Pro  CPU: intel corei3－3240 3.4GHz 주기억: 1737936KB 체계기동후 free: 458896KB buffer: 121824KB 캐쉬: 801964KB 망포구 1개, 1Gbps Mercury s108c(8포구)100Mbps Linux－2.6.32－358－el6_x86_64 Apache Tomcat/7.0.56 Java－openjdk－1.7.0.9.x86_64 망하브(1대) 실험봉사기조작체계 응용봉사프로그람 2 3 4 6 5 자료기지봉사프로그람 웨브응용프로그람 Mysqld v5.6.25 Mongod v3.0.4 RNS.war, LRStore.war 표 ９．아파치성능분석도구 ab를 리용하여 진행한 실험결과 1개 실체 2개 실체 3개 실체 실험항목 처리시간/ms 대기시간/ms 50%요청처리시간/ms 80%요청처리시간/ms 95%요청처리시간/ms 99%요청처리시간/ms 53 13 11 19 281 1 337 14 12 2 3 4 214 14 12 3 3 5 31 아파치성능분석도구 ab를 리용하여 진행한 실험결과를 표 9에 보여주었다. 실험은 ab선택파라메터(c = 1 000, n = 28 000), 호출페지(RequestInfoExample)에서 진행하 맺 는 말 리론적으로는 부하분산에 리용되는 봉사실체개수에 비례하여 요청처리능력은 높아지 지만 실제적으로 체계절환시간과 장치자원의 제약으로 하여 리론값과 차이난다. 실험환 경에서 볼 때 부하분산기술을 2개의 봉사실체에 적용할 때 1개 실체를 리용할 때에 비하 여 요청평균처리시간이 대략 1/3로 줄어든다는것을 확증하였다. 였다. 원격교육봉사체계 요청응답특성개선의 한가지 방법 － 65 － 참 고 문 헌 [1] Marko Maslac; Apache HTTP Server Introduction, Autun Peicevic, 32～38, 2016. [2] Tanuj Khare; Apache Tomcat7 Essentials, Packt, 91～123, 2012. 주체109(2020)년 5월 5일 원고접수 A Method to Improve Request-Response Performance in E-Learning Server System Kim Chol Hyok, O Nam Il In this paper, we analyse some of request-response characters of e-learning server system and propose a method to improve these characteristics based on load sharing. Keywords: request-response character, load sharing, e-learning server system