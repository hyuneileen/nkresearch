김일성종합대학학보 정보과학 주체109(2020)년 제66권  제1호 무리짓기에 의한 쏘프트웨어재구축 전현철, 신춘옥 쏘프트웨어재구축은 코드의 동작을 변경시키지 않고 내부구조를 조정하여 쏘프트웨 어의 리해성, 유지보수성, 재리용성, 유연성을 개선할수 있도록 한다. 《높은 응집도와 낮은 결합도》의 쏘프트웨어설계원리에 따라 메쏘드 혹은 마당들을 보다 많은 의존성을 가지는 클라스에 이동시키는 메쏘드, 마당이동재분해[2]가 연구되였 다. 또한 강하게 련관되는 메쏘드들과 마당들을 원래의 클라스로부터 새 클라스에로 추 출하는 클라스추출에 의한 재분해[1]가 연구되였다. 론문에서는 한 클라스로부터 다른 클라스에로 메쏘드 또는 마당들을 이동시키거나 클라스를 추출하는 기회를 식별하여 클라스들을 통합하거나 분할하는 클라스재분해방법 과 메쏘드준위의 망들에 기초하여 체계의 실체들을 재그룹화하는 무게붙은 무리짓기알고 리듬을 제안하였다. １．클라스준위의 재분해를 위한 전처리 G = cl clG 은 Network) 놓이며 모임이다. 정의 클라스준위의 다중의존관계방향망(CMDN: Class－level Multi－relation Dlrected clas ∈ 에는 클라스가 과 같이 표시된다. 여기서 정점 clE 은 클라스들사이에 존재하는 계승, 관련, 집약과 같은 n개 형의 의존관계들의 iE 를 n개 형중에서 i번째 의존성관계를 가지는 릉들의 모임이라고 할 때  E EV , ( cl ∪∪ clV ∪ E E = cl ) E 1 (cid:34)2 n cl 이고 이다. 이다. 만일 E ∈∃ i E cl 이면 G 1 clG 은  ( , GEV 1 ), = 2 = , ( EV ), (cid:34) , G 2 = , ( EV ) n n E 1 ∩ E (cid:34)2 ∩∩ nE φ= 다중의존관계방향망 속성 １ clG 은 다음과 같은 속성들을 가진다. 1, clas clas ∈2 clas 로부터 tE 가 정점들사이의 어느 한가지 형의 의존관계모임이라고 하자. 클라스 라고 표기) 이고 클라스 V clas 에로 가는 릉 clas 에 의존한다면(이것을 tE 2 가 존재한다. clas 이 1 e ∈12 e⎯→⎯ 12 1 속성 ２ 계승관계와 비계승관계만을 론의할 때 다중의존관계방향망 G는 G 1 2G 는 1G 과 이며 GG = 2 1E 은 계승을 제외한 1 G ∪ clas 1 clas ), = ) 2 2 , = GEV ( 1 EV , ( 2E 는 계승관계를 표현하는 릉의 모임이다.  , m , 2 clas 에서 M mm , { 1 i k Mm ∈ 는 클라스 clas 에서 정의된 실체모임은 메쏘드들의 모임 A i 를 포함한다. 여기서 i aa ,{ 1 (cid:34) (cid:34) = = a } } 2 2 n p , , i i 로 표시한다. 방향그라프 의존관계를 표현하는 릉의 모임이고 과 속성들의 모임 속성 ３ 클라스 정의된 메쏘드를 표시하며 터 이다. M ∪ = clas i A i i 무리짓기에 의한 쏘프트웨어재구축 － 41 － a ∈ 는 클라스 t A i i clas 에서 정의된 속성을 나타낸다. 이로부 １）비계승계층구조에 대한 재분해전처리연산 응집도와 결합도문제를 해결하기 위하여 비계승계층구조와 계승계층구조의 잎정점들 에 있는 매 클라스들의 실체들을 하나의 실체모임으로 통합한 다음 그것들을 재그룹화한 다. 계승계층구조에서 잎이 아닌 정점들을 무리짓기과정에 분해하면 코드의 동작이 달라 지므로 따로 론의하기로 한다. 재분해를 위한 전처리를 다음과 같이 진행한다.  ① 원천코드의 추상문법나무를 분석하여 망 GG = ② V 2G 의 정점 clasi ∈ 가 계승계층구조에서 잎이 아닌 정점이면 clas 를 제거해야 i 1 G ∪ 2 를 구축한다. 할 정점모임 DV 에 추가한다. ③ DV 에 속하는 모든 정점들과 그것과 련결된 릉들을 모두 삭제하여 나머지망 DV 의 정점들과 련결된 릉들의 모임이라고 하면 를 구성한다. 여기서 DE 를 ) G = 1 EV , ( 1 \ EVVV = , D D 1 = 와 같이 표시된다.  \ EE 1 1G 에서 련결성분들의 모임 ④ 나머지망 ⑤ 매 련결성분들에 있는 모든 클라스들을 실체모임 cc { 1 CC cc = 2 , , k ∈ ,2,1[ (cid:34) |, CC |] 와 m ∈ 기서 | kcc 는 련결성분 | |, (cid:34) kcc ,2,1[ m kcc 에 들어있는 클라스의 수를 표시한다. clas ∈ 에 대하여 k cc |] , (cid:34) , cc CC | | } 를 찾는다. i Entities 로 통합하면 모든 ∪ m clas Entities = 이다. 여 i 재분해전처리에 의하여 계승계층구조에서의 모든 상위클라스들을 체계로부터 추출한 로 표시할수 있다. Sys 에서의 모든 실 Entities Sys 다음 체계를 (cid:34) } = , , , Entities CC | | Entities { 1 2 체모임들이 첫 단계에서 재구조화되여야 할 대상들이다. ′∪′=′ G 1 G 2 ２）계승계층구조에 대한 재분해전처리연산 비계승계층구조의 실체들을 재그룹화한 후 클라스들의 수와 그것들사이의 관계는 달 라진다. 따라서 계승계층구조에 대한 재분해연산들을 수행하기 전에 다중의존관계방향망 Gcl 를 첫 재분해단계에서 얻어진 체계구조에 기초하여 갱신하여야 한다. } 2G′ 에서 TRTr | | 출력차수가 령이고 입력차수가 령보다 큰 클라스를 계승나무의 뿌리정점으로 정의하고 clas root 2G′ 에서의 정점들 k 로 표시한다. 뿌리정점으로부터 도달할수 있는 와 같이 표시하자. 계승관계망 계승나무들의 모임을 ,2,1[ Tr { 1 Tr 2 TR TR (cid:34) (cid:34) ∈ |, = |] k , , , , 은 계승나무 kTr 를 구성한다. 하나의 뿌리정점 clas 는 계승나무 root k kTr 에 대응한다. 계승나무로부터 Bad Smells를 제거할 때 코드의 동작을 보존하자면 계승계층구조에 있는 클라스들을 하나의 실체모임으로 통합한 후 재그룹화하지 말아야 한다. 이로부터 계승나무의 꼭대기로부터 밑에까지 내려가면서 클라스들을 분해한다. 계승계층구조에 대한 재분해전처리연산들은 다음과 같다. ① 다중의존관계방향망 ′∪′=′ 를 비계승계층구조에 대한 재분해결과에 따라 G 1 G Gcl 2 ′ ′ 2G′ 에서 한 정점이 계승계층구조에 ′ =′ 갱신한다. 여기서 ) , GEV ( EV ), ( 1 2 2 속하지 않는다면 그것과 련결된 릉은 존재하지 않는다. 2G 의 모임 V에 있는 클라스들을 하나하나 론의하면서 빈 메쏘드들을 포함하는 대면부들과 령차원수를 가지는 정점들을 이다. 망 =′ G 1 ′ , － 42 － 종합대학학보 정보과학 주체109(2020)년 제66권 제1호 모두 제거하여야 할 정점모임 DV 에 추가한다.  =′ ② DV 의 정점들을 삭제하여 나머지망 G 2 ′=′ VV \ 정점들과 련결된 릉모임이라고 하면 V ′ , EV ( 2 =′ ′ 2 E , D 2G′ 에서 련결성분들을 모두 찾으면 매 련결성분은 하나의 계승나무를 나타낸다. 이다. E E D \ 2 ③ ) 를 얻는다. 여기서 DE 를 DV 의 ２．메쏘드들을 재그룹화하기 위한 무게붙은 무리짓기 １）메쏘드준위의 무게붙은 망 매 실체모임 Entitiesi ∈ 는 계승나무 Trk ∈ 에서 임의의 클라스요소들사이의 관 계를 메쏘드준위의 무게붙은 무방향망으로 서술한다. 재분해과정에 모든 속성들을 Getter 혹은 Setter메쏘드들로, 속성에 대한 접근을 Getter 혹은 Setter메쏘드들의 호출로 취급 한다. Sys TR 메쏘드들사이의 속성공유, 호출, 기능결합을 메쏘드준위의 무방향망을 구축하여 론의 하며 관계의 세기에 따라 매 릉에 무게를 할당한다. 메쏘드 im 와 jm 의 공유속성무게 saw 를 다음과 같이 정의한다.  | M M ∩ | ( saw , mm i j ) = | M ⎧ ⎪ ⎨ ⎪ ⎩ i i j j , | , M ∪ 0 | M i ∪ M j | ≠ 때일 0 (1) 기타 경우 여기서 Mi와 Mj는 각각 mi와 mj에 의하여 호출된 속성들의 모임이다. I(mi, mj)를 메쏘드 mj에 대한 메쏘드 mi의 호출수, n을 체계에 들어있는 메쏘드들의 총수라고 하자. 메쏘드 mi와 mj사이의 메쏘드호출무게 miw는 식 (2)에 의하여 계산된 ijmiw 와 jimiw 의 최대값으로 정의한다. mmI ( i , j ) , n ∑ k 1 = miw ij = mmI ( k , j ) ⎧ ⎪ ⎪ ⎨ ⎪ ⎪ ⎩ n ∑ k 1 = 0 , 기타 경우 mmI ( k , j ) ≠ 때일 0 (2) mmmiw ( , ) = max( i j miw ij , miw ji ) (3) 같은 기능정의역에서 자주 출현하는 메쏘드들은 긴밀한 기능결합도관계를 가지며 같 은 클라스에 속할 확률이 높다. 따라서 기능결합도무게 fcw 를 다음과 같이 계산한다. ( fcw , mm i j ) = ET i ⎧ ⎪ ⎨ ⎪ ⎩ ET ij ET 0 + j , , ET i + ET j ≠ 0 때일 (4) 기타 경우 여기서 ijET 는 메쏘드 im 와 jm 가 함께 출현하는 기능정의역의 수, iET 와 jET 는 각각 im 와 jm 가 호출되는 기능정의역의 수를 나타낸다. 의미론적류사성무게 ssw 를 정의하기 위하여 메쏘드 im 와 jm 는 각각 벡토르 → im , → jm 로 표시한다. 무리짓기에 의한 쏘프트웨어재구축 － 43 － → km 를 벡토르 || || i mmssw ( , j ) 를 다음과 같이 정의한다. → km 의 유클리드거리라고 하면 → → mm × i j ( mmssw , i ) = j → m i || || × || → m j || (5) 그러므로 i mmssw ( , j ) 는 각이한 코드토막에서의 단어사용류사성에 의존한다. 메쏘드 jm 가 개념적으로 관련된다면 im 와 여 그것보다 적은 무게를 가지는 가짜의미론적인 관계를 제거한다. 메쏘드준위의 망모형 에서 릉무게를 식 (6)으로 정의한다. 여기서 mmmiw ( 의 값은 0보다 크다. 턱값 Th1을 설정하 이다.  1= 이 주어지면 ηγβα + ) ∈j i mmssw ( mmw i mmssw ( mm , i mm , i ]1,0[ ]1,0[ saw ( ) ∈j fcw ( ), ), ), + + ( ) , , , , e j j i j j 은 다음과 같이 계산된다.  mmw saw , ( i α = × ) ( e i j mm , i j ) + β × mmmiw ( , ) + γ ×+ fcw ( η ×+ mmssw ( , i ) j i mm , i j ) j (6) ２）무게붙은 무리짓기알고리듬 실체들을 재그룹화하는데 공동체검출알고리듬을 리용한다.  알고리듬에서는 다음과 같이 정의된 무게붙은 모듈도 Q를 분할의 품질을 평가하는 데 리용한다. Q = 1 2 W ∑ ⎛ ⎜ ⎜ ⎝ w ij − s i × s 2 W ij 여기서 W는 망에서의 모든 릉들의 무게의 합이고 무게들의 합이며 ind 와 2 cn j j , ) = Com ∑ ⎞ ⎟ ×⎟ ⎠ ( Com δ i ⎡ ⎢ ⎢ ⎣ k is 는 정점 jnd 사이의 릉에 붙인 무게이다. 그리고 S k 2 W W k W ⎤ ⎥ ⎥ ⎦ ⎞ ⎟ ⎠ ⎛ ⎜ ⎝ − 1 = (7) ind 와 련결된 모든 릉들의 cn 는 망에서 kCom 의 kS 는 공동체 공동체의 수이고 정점들에 련결된 릉들의 무게의 합이다. kCom 내의 릉들의 무게의 합이며 ijw 는 정점 kW 는 공동체 식 (7)에 기초하여 전체 체계에 대한 무게붙은 모듈도의 증분을 공동체 iCom 와 Com 를 통합한 후에 다음과 같이 계산한다. j Δ Q ij = ⎧ ⎪ ⎨ ⎪⎩ , S in Com ( i , Com ) − j S i × S j W 2 0 , iCom 와 , Com i 가 Com j 와 련결되였을 때 (8) 기타 경우 여기서 S in Com ( i Com ) 는 공동체 j Com 를 련결하는 릉들의 무게를 모두 합한것 j 이다. 모듈도증분행렬 Q ij 계산하고 갱신하는데 리용한다. ( Δ= A Q ) 를 망에서 매 공동체쌍을 통합하기 전에 모듈도증분을 코드동작을 보존하기 위하여 문법규칙과 전조건에 따라 분할하지 말아야 할 메쏘드 들을 공동체검출을 시작하기 전에 하나의 공동체에 묶는다. 여기서 망에서의 다른 정점들 ijQΔ 들을 계산 은 모두 독립적인 공동체로 론의된다. 또한 모듈도증분행렬 QA 를 갱신한다. 이와 같은 방법으로 공동체들을 QA 의 최대원소가 령이 될 때까지 합친다. QA 의 매 원소 nCom 을 통합하며 동시에 QA 에서 최대원소라면 공동체 한다. 만일 mCom 과 mnQΔ 이 － 44 － 종합대학학보 정보과학 주체109(2020)년 제66권 제1호 이때 공동체구조는 최량인 분할로 되고 체계의 모듈도는 상승한다. , EVG = ( 망 ) 로 묶는다. 그외 매 정점 인다고 가정하면 공동체모임 C는 의 린접행렬 A′ 를 얻는다. 분할하지 말아야 할 메쏘드들은 하나의 공동체 | C 개의 공동체로 나누 이다. 이때 무게화된 모듈 ndi ∈ 를 공동체로 론의한다. 망 G가 , Com (cid:34) C V } = , , | 2 CCom | | Com { 1 nn × γ ×+ C nn × η ×+ D nn × 에 기초하여 메쏘드준위 도는 0으로 놓는다. ② 식 (8)에 따라 초기 모듈도증분행렬 QA 의 원소 ijQΔ 를 다음과 같이 계산한다. 공동체검출알고리듬은 다음과 같다.  입력: 공유속성에 대한 린접행렬 메쏘드호출에 대한 린접행렬 동시실행에 대한 린접행렬 의미론적련관의 린접행렬 nnA ×  nnB × nnC ×  nnD × 출력: 공동체모임 C, 무게화된 모듈도 Q =′ ① 먼저 방정식 α β B A A × × + nn × for(i = 1; i <= |C|; i ++) { for(j = 1; j <= |C|; j ++) { if 0≠′ijA Q ( Δ = ij else } Δ ijQ 0= ;} S in Com ( i , Com ) − j S i × S 2/) W ; j ③ 모듈도증분을 고려하지 않고 행렬 QA 에서 최대원소 minQΔ 을 찾는다. 공동체 nCom 을 통합하고 통합된 공동체를 m에 있는 원소를 없애고 행 n과 렬 n에 있는 원소들을 다음과 같이 갱신한다. nCom 으로 표시한다. 행 m과 렬 mCom 과 Δ Q mk Δ+ Q nk , Com 가  Com , Com n m 과 련결 Δ Q mk − S n × 2/ WS k , Com 가  Com 련결, k 2 =′Δ=′Δ Q Q kn nk Com n 련결되지 않았을 때 Δ Q nk − S m × 2/ WS k 2 , Com 가 Com 련결, Com m 련결되지 않았을 때 k k 에  m 과 에  n 과 ⎛ ⎜ ⎜ ⎜ ⎜ ⎜ ⎜ ⎜ ⎝ 동시에 식 QQ = Δ+ minQ 에 의하여 무게붙은 모듈도를 갱신한다. 같은 원래 클라스에 속하는 실체들로 이루어 진 공동체들을 통합하여 생성된 최대모듈도증분이 0보다 낮아질 때까지 그 과정을 반 복한다. ④ 서로 다른 클라스들의 실체들을 포함하고 해당한 minQΔ 이 행렬 QA 에서 가장 큰 공동체쌍을 계속 찾는다. 단계 ③의 방법으로 QA 의 원소들을 계속 갱신한다. QA 의 최대값원소가 0과 같거나 무리짓기에 의한 쏘프트웨어재구축 － 45 － 작을 때 무리짓기를 끝낸다. ３）클라스추출재분해와 메쏘드, 마당이동재분해의 기회식별 메쏘드이동 및 마당이동재분해, 클라스추출재분해의 기회를 무리분할과 원래 클라스 의 구조에서의 차이를 해석하여 동시에 식별한다. 같은 련결성분에서 매 원래의 클라스 와 얻어진 매 공동체를 비교한다. tC 를 무리짓기분석에 의하여 얻어진 공동체모임이라고 하고 ,2,1[ 이다. CC (cid:34) |, ⊆ ∈ |] t , tC , V t cc t tV 를 원래의 클라스모임이라고 하면 그러면 모든 에 대하여 i ≠ 이고 j , j , ∈ p ≠ 이며 im , q ,2,1[ (cid:34) |, V t |], qpn , , ∈ ,2,1[ (cid:34) |, C |] t Com p ∩ Com q φ= | tV 와 | | tC 는 각각 련결성분 | tcc 에 관한 원래 클라스와 새로운 클라스의 이다. 여기서 총 개수이다. ① 모든 , qp ∈ ,2,1[ (cid:34) |, |], p ≠ , kq ∈ ,2,1[ (cid:34) , N V t ], N p p ≥ 2 에 대하여 Com ⊂ clas , Com ∩ clas p clas 를 클라스추출연산대상으로 식별한다. q k k φ= p p clas 가 분해되여야 할 그룹의 수이다. kCom 는 clas 로부터 추 이면 원래의 클라스 출되여야 할 새로운 클라스이며 ② 모든 , qp ∈ ,2,1[ t(cid:34) |, V |], pN 는 , p kq ≠ = 1 p 에 대하여  ∩ clas q 이면 메쏘드, 마당이동재분해의 후보를 원래 클라스 p k k clas ⊂ Com , Com = T φ≠ clas 에서 식별한다. 실체모임 T가 q 클라스 clas 로부터 clas 에로 이행하여야 한다. q p ③ clas = p clas , clas q pi = clas qj 라고 가정하자. Np ∪ i = 1 Nq ∪ i 1 = | Com k ∩ clas | > | Com k p ∩ clas q | 이면 실체모임 Com ∩ k clas p 를 원래의 클라스 clas p 로부터 추출하여 새로운 클라스 clas 를 형성한다. 또한 메쏘드, 마당이동재분해를 new p clas 에 적용하여야 하며 실체모임 q Com ∩ k clas q 를 클라스 clas 로부터 clas 에로 이 q new p 동시켜야 한다.  Com clas ∩ | k p 재분해를 진행하여야 하며 실체모임 q k | < | Com ∩ clas | 이면 원래의 클라스 clas 우에서 메쏘드 및 마당이동 Com ∩ k clas p 는 clas 에로 이동시켜야 q p clas 로부터 p 맺 는 말 론문에서는 《높은 응집도와 낮은 결합도》의 쏘프트웨어설계원리에 따라 메쏘드준위 의 망우에서 체계의 실체들을 재그룹화하는 무게붙은 무리짓기알고리듬에 기초하여 메쏘 드, 마당이동, 클라스추출의 기회를 식별하며 클라스들을 통합하거나 분할하는 방법을 제 안하였다. 한다. － 46 － 종합대학학보 정보과학 주체109(2020)년 제66권 제1호 참 고 문 헌 [1] G. Bavota, R. et al.; IEEE Trans. Softw. Eng., 40, 7, 671, 2014. [2] L. M. Hakik et al.; Int. J. Comput. Sci. Netw. Secur., 14, 1, 11, 2014. 주체108(2019)년 11월 5일 원고접수 Study on Software Refactoring by Clustering Jon Hyon Chol, Sin Chun Ok In this paper we propose wehighted clustering algorithm to identify refactoring opportunities and a method that regroup system’s components based on method-level network. Keywords: refactoring, clustering, cohesion