김일성종합대학학보 수 학 주체108(2019)년 제65권 제2호 대용량업무자료에서 련관규칙을 발굴하기 위한 한가지 병렬처리알고리듬 윤룡한, 김진성 위대한 수령 동지께서는 다음과 같이 교시하시였다. 《새로운 과학분야를 개척하며 최신과학기술의 성과를 인민경제에 널리 받아들이 기 위한 연구사업을 전망성있게 하여야 합니다.》(《전집》 제72권 292페지) 련관규칙발굴은 빈발항목모임탐색으로 진행되며 주어진 업무자료기지에서 빈발항목 모임을 발굴하기 위한 대부분의 방법들은 Apriori방법에 의거하고있다. 선행연구[1]에서는 Apriori알고리듬을 리용하여 자료를 분할처리하는 알고리듬을 제기 하였으나 Apriori알고리듬이 업무자료기지를 여러번 반복순환하는것으로 하여 업무개수가 많은 자료기지에 적용할 때 발굴시간이 긴 결함이 있다. 선행연구[2]에서는 구간사귐법을 리용한 빈발항목모임발굴방법을 제안하였고 선행연 구[4]에서는 개선된 Apriori알고리듬을 제안하였으나 이 알고리듬들도 업무자료기지의 업 무개수가 큰 경우에는 적용할수 없는 결함이 있다. 론문에서는 Apriori를 리용하는 선행연구[1]의 방법과 순환을 리용하는 선행연구[3]의 병렬처리알고리듬보다 속도가 빠른 위치모임을 리용한 병렬처리알고리듬을 제기하고 선 행방법과의 성능비교를 진행하였다. 정의 １[1] I 료기지라고 하면 , n 을 항목모임 k ≤≤ IM ⊆ 의 지지도라고 부른다. IM ⊆ 의 지지수가 주어진 지지수보다 크면 항목모임 M 을 빈 mi ( M = 을 항목모임 t (} IM ⊆ 의 지지수, T 정의 ２[4] 항목모임 을 항목들의 모임, T /) nM 을 업무자 suppcount suppcount tMn ⊆ ,{: t = 1 ,{: i = 1 k 1|{| supp (cid:34) (cid:34) M |} :) :) D ⊆ = } ( ( ) I T t t i 2 2 , , , , k i 발항목모임이라고 부른다. 항목의 개수가 k 인 빈발항목모임전부의 모임을 kF 로 표시한다. 정의 ３ 항목모임 X ⊆ 에 대하여 X 를 포함하는 업무번호들의 모임 I P X |{: = Xj ⊆ t , j 1 j ≤≤ n } 을 X 의 위치모임이라고 부른다. 위치모임을 리용한 빈발항목모임발굴알고리듬에 대하여 보자. ① 업무자료기지 D , 최소지지수 min_sup 를 입력한다. ② 자료기지를 순환하면서 1－빈발항목모임들과 그것의 위치모임을 찾는다.  ③ 1−kF 로부터 k －빈발항목모임족 kF 를 다음과 같이 －빈발항목모임족 ( −k )1 얻는다. ( −k －빈발항목모임들의 가능한 모든 쌍 )1 BA, 에 대하여 합모 임 1−kF 에 포함되는 두 ∪= BAC A 와 B 의 위치모임 AP , BP 를 일반성을 잃지 않고 = P j A p < 라고 가정하자. j ,{ 1 p 1 2 2 의 농도가 k 이면 그것이 빈발항목모임인가를 다음과 같이 판정한다. , (cid:34) (cid:34) }, } = j l l , , , P B l ,{ 1 2 p 1 로 표시하자. p 2 － 18 － 종합대학학보 수학 주체108(2019)년 제65권 제2호 flag ( j 1 ), flag ( j ), (cid:34) , flag ( 2 pj 1 ) 을 1로, (cid:34) , n ,{\} j 1 j 2 , (cid:34) , pj 1 } 의 원소들을 번호 ,2,1{ 로 가지는 flag 는 0으로 설정한다. j ≤≤ 1,1) 모임 flag P l ( = = |{ l j j 2p } 의 원소수가 min_sup 이상이면 C 를 kF 에 추가한다. ④ 1−kF 로부터 kF 를 구성하는 과정을 ∅=kF 일 때까지 반복한다. ⑤ ∪ F = jF k 1 − j 1 = 를 출력한다. 굴한다. 정리 １ 위치모임을 리용한 빈발항목모임발굴알고리듬은 빈발항목모임들을 모두 발 증명 알고리듬의 방법으로 발굴한 k －빈발항목모임족을 kF ′ 라고 하자. 1=k 인 경우 알고리듬의 걸음 ②로부터 ′= p ) F k ′= 이다. 1 F F 1 이라고 하자. 1 − 에 대하여 A 의 부분모임들가운데서 원소의 개수가 인 경우 p −= N∈ (1 ,2 F ≥ 1 − p k p pFA∈∀ ( AS 라고 하면 ) AS ) ( ⊆ F ′= F p 1 − 이다. p 1 − 1−p 인 부분모임족을 임의의 두 모임 | ∪ pQP 다. 임의의 빈발항목모임의 부분모임도 역시 빈발항목모임이므로 ASQP ) ∈ −= pQP ∩ | 에 대하여 이면 =| 2 ( ) , | 즉 =∪ AQP 이 ( AS 의 구성으로부터 | −= pQP ∩ | 2 인 ASQP ) ∈ ( , 가 존재한다. | −= pQP ∩ | 2 이므로 발항목모임이다. 그러므로 또한 F ⊂′ p F p 이므로 QP, 에 알고리듬의 걸음 ③을 적용하여 얻어진 모임은 －p 빈 pFA F p F ′⊂ 이다. ′= 이다. ′∈ 즉 F F p p p 따라서 알고리듬은 빈발항목모임들을 모두 발굴한다.(증명끝) 정리 ２ 위치모임을 리용한 빈발항목모임발굴알고리듬은 Apriori알고리듬보다 실행시 간을 단축한다. 다음으로 위치모임을 리용한 병렬처리알고리듬에 대하여 보자. 몇가지 기호들을 약속하자. D 를 업무자료기지, Gmin_sup 를 대역최소지지수, SCL 을 지지수목록(매 항목들의 지 지수를 보관한다.), NB 를 최소지지수보다 작은 항목들의 모임족, N 을 자료분할알고리듬 kFIL 를 원소의 개수가 k 인 빈발항목모임이 에 의하여 나뉘여진 부분자료모임들의 개수, 라고 하자. 국부빈발항목모임발굴알고리듬은 다음과 같다. ① 업무자료기지 D , 최소지지수 min_sup 를 입력한다. ② 지지수목록 SCL 과 부의 경계 NB 를 0으로 초기화한다. ③ 자료분할알고리듬을 리용하여 업무자료기지 D 를 분할한다. ④ 위치모임을 리용한 빈발항목모임발굴알고리듬을 리용하여 부분자료기지 Di 1( ≤≤ Ni ) 에서 FILi 1( ≤≤ Ni ) 들을 발굴한다. 의 지지수를 SCL 에 보관한다. 빈발항목모임을 발굴할 때 비빈발로 되는 모임들을 NB 에 추가하며 매 항목모임들 대용량업무자료에서 련관규칙을 발굴하기 위한 한가지 병렬처리알고리듬 － 19 － 대역빈발항목모임발굴알고리듬(병합알고리듬)은 다음과 같다. ① FIL 을 ② ,2 (cid:34) 1FIL 로 설정한다. , NFIL FIL 에 포함되는 모든 항목모임들에 대하여 그 모임이 FIL 에 존재하면 그 모임의 지지수를 더해주고 존재하지 않으면 그 모임을 FIL 에 추가한다. SC ③ FIL 에 있는 모든 항목모임 Item 들에 대하여 Item 의 지지수 i 최소수 G min_ sup 보다 작은 경우 Item 가 NB 에 있으면 지지수 SC Item( i). NB 를 더한 다음 SC Item( ) i < G min_ sup i i Item( ) 가 대역 i 에 NB 에서 Item 의 i Item 를 삭제 i ) SC Item( i 이면 FIL 에서 한다. ④ 대역빈발항목모임족 FIL 을 출력한다. 임의로 생성한 0과 1로 이루어진 5 000×18, 7 000×22, 10 000×20형행렬을 업무자료 기지로 놓고 선행연구[1, 3]의 방법과 론문의 방법들을 적용하여 빈발항목모임의 생성시간 을 비교한 결과는 표와 같다. 표．빈발항목모임생성시간의 비교결과 업무개수/개 5 000 7 000 10 000 방법[1] 4 200ms 7 420ms 9 560ms 방법[3] 3 950ms 6 950ms 8 780ms 론문의 방법 3 930ms 5 640ms 8 120ms 표에서 보는바와 같이 론문에서 제안한 방법이 업무의 개수가 작은 자료기지에 대하 여서는 선행연구들의 방법들과 실행시간이 비슷하지만 업무개수가 커지면 속도가 상대적 으로 더 빠르다. 참 고 문 헌 [1] N. Y. Suryavanshi et al.; Int. J. Comput. Appl., 112, 4, 37, 2015. [2] K. Spandana et al.; Int. J. Comput. Appl., 155, 10, 22, 2016. [3] A. Parveen et al.; Int. J. Comput. Appl., 146, 2, 16, 2016. [4] M. G. Ingle et al.; Int. J. Comput. Appl., 112, 4, 37, 2015. 주체107(2018)년 12월 5일 원고접수 A New Parallel Algorithm for Mining Association Rules in Large Transaction Database Yun Ryong Han, Kim Jin Song We propose a new parallel algorithm for mining frequent itemset using position set and evaluate its effectiveness. The experimental results indicate that the proposed algorithm is faster than Apriori algorithm and the algorithm that is using transposition. Key words: frequent itemset, position set, association rule mining